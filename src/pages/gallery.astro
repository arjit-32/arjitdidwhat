---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Hero from "@/components/landing/Hero.astro";
import media from "@/data/media.json";

// Sort media by date
const sortedMedia = [...media].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
---

<BaseLayout>
  <Hero />
  
      <p class="text-center tracking-tight text-balance font-medium font-display text-black">
        I present to you, some of my best Vlogs and Photos
      </p>
    
  <!-- Filter Buttons -->
  <div class="flex justify-center gap-4 my-8 px-4">
    <!-- <button 
      data-filter="all" 
      class="filter-btn bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition-colors"
    >
      All
    </button> -->
    <button 
      data-filter="photo" 
      class="filter-btn bg-gray-200 px-6 py-2 rounded-full hover:bg-gray-300 transition-colors"
    >
      Photos
    </button>
    <button 
      data-filter="vlog" 
      class="filter-btn bg-gray-200 px-6 py-2 rounded-full hover:bg-gray-300 transition-colors"
    >
      Vlogs
    </button>
  </div>

  <!-- Media Grid -->
  <section class="max-w-7xl mx-auto px-4 py-8">
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {sortedMedia.map((item) => (
        <div 
          class={`media-item group relative bg-white rounded-xl shadow-md overflow-hidden hover:shadow-xl transition-all duration-300 ${
            item.type === 'vlog' ? 'row-span-1' : 'row-span-2'
          }`} 
          data-type={item.type}
        >
          {item.type === "vlog" ? (
            <div class="w-full">
              <!-- Video Container -->
              <div class="aspect-[9/16] w-full relative">
                <iframe
                  src={`https://www.youtube.com/embed/${item.url.split("shorts/")[1]}`}
                  title={item.title}
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                  class="absolute inset-0 w-full h-full"
                ></iframe>
              </div>
              <!-- Video Info -->
              <div class="p-3">
                <div class="flex items-center justify-between mb-1.5">
                  <h3 class="text-base font-semibold text-gray-800 line-clamp-1">{item.title}</h3>
                  <span class="px-2 py-0.5 rounded-full text-xs bg-red-100 text-red-600">
                    {item.type}
                  </span>
                </div>
                {item.description && (
                  <p class="text-gray-600 text-sm mb-1.5 line-clamp-2">{item.description}</p>
                )}
                <time datetime={item.date} class="text-xs text-gray-400">
                  {new Date(item.date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
              </div>
            </div>
          ) : (
            <div class="h-full flex flex-col">
              <!-- Photo Container -->
              <div class="aspect-square w-full overflow-hidden flex-grow">
                <img
                  src={item.url}
                  alt={item.title || "Image"}
                  class="w-full min-h-full object-cover transform group-hover:scale-105 transition-transform duration-300"
                  loading="lazy"
                />
              </div>
              <!-- Photo Info -->
              <div class="p-4 bg-white">
                <div class="flex items-center justify-between mb-2">
                  <h3 class="text-lg font-semibold text-gray-800">{item.title}</h3>
                  <span class="px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-600">
                    {item.type}
                  </span>
                </div>
                {item.description && (
                  <p class="text-gray-600 text-sm mb-2">{item.description}</p>
                )}
                <time datetime={item.date} class="text-xs text-gray-400">
                  {new Date(item.date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
              </div>
            </div>
          )}
        </div>
      ))}
    </div>
  </section>

  <script>
    // Wait for the DOM to be fully loaded
    document.addEventListener('DOMContentLoaded', () => {
      const filterButtons = document.querySelectorAll('.filter-btn');
      const mediaItems = document.querySelectorAll('.media-item');

      filterButtons.forEach(button => {
        button.addEventListener('click', () => {
          // Remove active class from all buttons
          filterButtons.forEach(btn => {
            btn.classList.remove('bg-blue-500', 'text-white');
            btn.classList.add('bg-gray-200');
          });

          // Add active class to clicked button
          button.classList.remove('bg-gray-200');
          button.classList.add('bg-blue-500', 'text-white');
          
          const filter = button.getAttribute('data-filter');
          
          mediaItems.forEach(item => {
            const itemType = item.getAttribute('data-type');
            if (filter === 'all') {
              item.style.display = '';
              item.classList.add('animate-fade-in');
            } else {
              if (itemType === filter) {
                item.style.display = '';
                item.classList.add('animate-fade-in');
              } else {
                item.style.display = 'none';
              }
            }
          });
        });
      });
    });
  </script>

  <style>
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .animate-fade-in {
      animation: fadeIn 0.3s ease-out forwards;
    }

    /* Custom aspect ratio for vertical shorts */
    .aspect-[9/16] {
      aspect-ratio: 9/16;
    }
  </style>
</BaseLayout>